/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gestion_transport.swing.formulaires.panels;

import gestion_transport.swing.classes.Reservation;
import gestion_transport.swing.classes.Session;
import gestion_transport.swing.gestions.GestionReservation;
import java.awt.BorderLayout;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vanilah
 */
public class PanelReservation extends javax.swing.JPanel {

    private PanelFactureAdmin facturePanel;
    /**
     * Creates new form PanelReservation
     */
    public PanelReservation(PanelFactureAdmin facturePanel) {
        this.facturePanel = facturePanel;
        initComponents();
        txtIdReserv.setVisible(false);
        txtTransId.setVisible(false);
        listeToutReservation();
    }

    public void listeToutReservation(){
        String titre[] = {"Id", "Nom du passager", "Prénoms", "Contact", "ID du trajet", "Nombre de billet", "Statut paiement", "Montant payé", "Tansaction_ID", "Date de réservation"};
        Object enreg[][] = new Object[1][1];
        
        try {
            GestionReservation gr = new GestionReservation();
            int nbr = gr.countReservation();
            enreg = new Object[nbr][titre.length];//nbr = ligne et titre.length = colonne
            ResultSet rst = gr.selectAllByDate();
            int i = 0;
            while (rst.next()) {
                enreg[i][0] = (Object) rst.getString("id_reserv");
                enreg[i][1] = (Object) rst.getString("nomcli");
                enreg[i][2] = (Object) rst.getString("prenomcli");
                enreg[i][3] = (Object) rst.getString("contact_cli");
                enreg[i][4] = (Object) rst.getString("id_traj");
                enreg[i][5] = (Object) rst.getString("nb_billet");
                enreg[i][6] = (Object) rst.getString("statut_paiement");
                enreg[i][7] = (Object) rst.getString("montant_paye");
                enreg[i][8] = (Object) rst.getString("transaction_id");
                enreg[i][9] = (Object) rst.getString("date_reservation");
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        tableReservation.setModel(new DefaultTableModel(enreg, titre));
        jScrollPane1.setViewportView(tableReservation);
    }
    
    public void effaceChampReserv(){
        txtContactCli.setText("");
        txtDateReserv.setText("");
        txtIdTraj.setText("");
        txtMontant.setText("");
        txtNbBillet.setText("");
        txtNomCli.setText("");
        txtNomRech.setText("");
        txtPrenom.setText("");
        txtStatPaim.setText("");
    }
    
    public boolean verifReservation(){
        if(txtNomCli.getText().trim().isEmpty() || txtPrenom.getText().trim().isEmpty() || txtContactCli.getText().trim().isEmpty() || txtNbBillet.getText().trim().isEmpty() || txtStatPaim.getText().trim().isEmpty() || txtMontant.getText().trim().isEmpty() || txtDateReserv.getText().trim().isEmpty() || txtIdTraj.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuiller remplir tous les champs obligatoires", "Champs manquants", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if(!txtNbBillet.getText().matches("\\d+") || Integer.parseInt(txtNbBillet.getText()) <= 0 ){
            JOptionPane.showMessageDialog(this, "Nombre de billet incorrecte", "Erreur", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if(!txtMontant.getText().matches("\\d+") || Integer.parseInt(txtMontant.getText()) <= 0 ){
            JOptionPane.showMessageDialog(this, "Montant incorrecte", "Erreur", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if(!txtContactCli.getText().matches("^(034|032|033|038|037)\\d{7}$")){
            JOptionPane.showMessageDialog(this, "Le contact doit comporter 10 chiffres et commencer par 034, 032, 033, 038 ou 037", "Numéro Invalide", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIdReserv = new javax.swing.JTextField();
        txtNomCli = new javax.swing.JTextField();
        txtPrenom = new javax.swing.JTextField();
        txtContactCli = new javax.swing.JTextField();
        txtIdTraj = new javax.swing.JTextField();
        txtNbBillet = new javax.swing.JTextField();
        txtStatPaim = new javax.swing.JTextField();
        txtMontant = new javax.swing.JTextField();
        txtDateReserv = new javax.swing.JTextField();
        txtTransId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReservation = new javax.swing.JTable();
        btnAjoutReserv = new javax.swing.JButton();
        btnEffacerReserv = new javax.swing.JButton();
        btnModifReserv = new javax.swing.JButton();
        btnSuppReserv = new javax.swing.JButton();
        txtNomRech = new javax.swing.JTextField();
        btnRechReserv = new javax.swing.JButton();
        btnRetourReserv = new javax.swing.JButton();
        btnVoirFacture = new javax.swing.JButton();

        txtIdReserv.setText("Id Reservation");

        txtNomCli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomCliKeyTyped(evt);
            }
        });

        txtPrenom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrenomKeyTyped(evt);
            }
        });

        txtContactCli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactCliKeyTyped(evt);
            }
        });

        txtIdTraj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdTrajKeyTyped(evt);
            }
        });

        txtNbBillet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNbBilletKeyTyped(evt);
            }
        });

        txtStatPaim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStatPaimKeyTyped(evt);
            }
        });

        txtMontant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontantKeyTyped(evt);
            }
        });

        txtDateReserv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDateReservKeyTyped(evt);
            }
        });

        txtTransId.setText("Transaction_Id");

        jLabel1.setText("Nom du passager");

        jLabel2.setText("Prénom(s)");

        jLabel3.setText("Contact du passager");

        jLabel4.setText("ID du Trajet");

        jLabel5.setText("Nombre de billet");

        jLabel6.setText("Statut du paiement");

        jLabel7.setText("Montant payé");

        jLabel8.setText("Date de réservation");

        tableReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableReservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableReservationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableReservation);

        btnAjoutReserv.setText("Ajouter");
        btnAjoutReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutReservActionPerformed(evt);
            }
        });

        btnEffacerReserv.setText("Effacer");
        btnEffacerReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEffacerReservActionPerformed(evt);
            }
        });

        btnModifReserv.setText("Modifier");
        btnModifReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifReservActionPerformed(evt);
            }
        });

        btnSuppReserv.setText("Supprimer");
        btnSuppReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuppReservActionPerformed(evt);
            }
        });

        txtNomRech.setText("Nom passager");
        txtNomRech.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomRechKeyTyped(evt);
            }
        });

        btnRechReserv.setText("Recherche");
        btnRechReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechReservActionPerformed(evt);
            }
        });

        btnRetourReserv.setText("Retour");
        btnRetourReserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourReservActionPerformed(evt);
            }
        });

        btnVoirFacture.setText("Voir Facture");
        btnVoirFacture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoirFactureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAjoutReserv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModifReserv, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEffacerReserv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSuppReserv)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btnVoirFacture)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 967, Short.MAX_VALUE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtMontant, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNbBillet, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNomCli, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtContactCli, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTransId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)))
                    .addComponent(txtIdReserv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPrenom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(txtIdTraj, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStatPaim, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDateReserv, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNomRech, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnRetourReserv, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRechReserv))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtIdReserv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTransId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNomRech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRechReserv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRetourReserv)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContactCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdTraj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNbBillet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStatPaim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDateReserv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAjoutReserv)
                            .addComponent(btnEffacerReserv))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModifReserv)
                            .addComponent(btnSuppReserv))
                        .addGap(30, 30, 30)
                        .addComponent(btnVoirFacture)
                        .addContainerGap(119, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAjoutReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutReservActionPerformed
        // TODO add your handling code here:
        if(!verifReservation()){
            return;
        }
        else{
            int id_traj = Integer.parseUnsignedInt(txtIdTraj.getText());
            String nomcli = txtNomCli.getText();
            String prenom = txtPrenom.getText();
            String contact = txtContactCli.getText();
            int montant = Integer.parseUnsignedInt(txtMontant.getText());
            int nb_billet = Integer.parseUnsignedInt(txtNbBillet.getText());
            String statu_pai = txtStatPaim.getText();
            String trans_id = "Paiement liquide";
            String date_reserv = txtDateReserv.getText();
            Reservation r = new Reservation(nomcli, prenom, contact, id_traj, nb_billet, statu_pai, montant, trans_id, date_reserv);
            try{
                GestionReservation gv = new GestionReservation();
                gv.insertReservation(r);
                listeToutReservation();
                JOptionPane.showMessageDialog(this, "Insertion réservation réussi!!");
                effaceChampReserv();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }            
        }
    }//GEN-LAST:event_btnAjoutReservActionPerformed

    private void btnEffacerReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEffacerReservActionPerformed
        // TODO add your handling code here:
        effaceChampReserv();
    }//GEN-LAST:event_btnEffacerReservActionPerformed

    private void tableReservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableReservationMouseClicked
        // TODO add your handling code here:
        int ligne = tableReservation.getSelectedRow();
        txtIdReserv.setText(String.valueOf(tableReservation.getValueAt(ligne, 0)));
        txtNomCli.setText(String.valueOf(tableReservation.getValueAt(ligne, 1)));
        txtPrenom.setText(String.valueOf(tableReservation.getValueAt(ligne, 2)));
        txtContactCli.setText(String.valueOf(tableReservation.getValueAt(ligne, 3)));
        txtIdTraj.setText(String.valueOf(tableReservation.getValueAt(ligne, 4)));
        txtNbBillet.setText(String.valueOf(tableReservation.getValueAt(ligne, 5)));
        txtStatPaim.setText(String.valueOf(tableReservation.getValueAt(ligne, 6)));
        txtMontant.setText(String.valueOf(tableReservation.getValueAt(ligne, 7)));
        txtTransId.setText(String.valueOf(tableReservation.getValueAt(ligne, 8)));
        txtDateReserv.setText(String.valueOf(tableReservation.getValueAt(ligne, 9)));
    }//GEN-LAST:event_tableReservationMouseClicked

    private void btnModifReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifReservActionPerformed
        // TODO add your handling code here:
        if (!verifReservation()) {
            return;
        } else {
            try { 
                int id_traj = Integer.parseUnsignedInt(txtIdTraj.getText());
                int montant = Integer.parseUnsignedInt(txtMontant.getText());
                int nb_billet = Integer.parseUnsignedInt(txtNbBillet.getText());
                String trans_id = "Paiment liquide";
                GestionReservation gr = new GestionReservation();
                Reservation rv = new Reservation(txtNomCli.getText(), txtPrenom.getText(), txtContactCli.getText(), id_traj, nb_billet, txtStatPaim.getText(), montant, trans_id, txtDateReserv.getText());
                gr.updateReservation(txtIdReserv.getText(), rv);
                effaceChampReserv();
                listeToutReservation();
                JOptionPane.showMessageDialog(this, "Mise à Jour réussi!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnModifReservActionPerformed

    private void btnSuppReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuppReservActionPerformed
        // TODO add your handling code here:
        if (!verifReservation()) {
            return;
        } else {
            try {
                GestionReservation gr = new GestionReservation();
                JOptionPane.showConfirmDialog(this, "Voulez vous vraiment supprimer cette réservation ? ");
                gr.deleteReservation(txtIdReserv.getText());
                effaceChampReserv();
                listeToutReservation();
                JOptionPane.showMessageDialog(this, "Suppression réussie!!");
            } catch (Exception ex) {
                Logger.getLogger(PanelTrajet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSuppReservActionPerformed

    private void btnRechReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechReservActionPerformed
        // TODO add your handling code here:
         String NomRech = txtNomRech.getText().trim();
        
        if(!NomRech.isEmpty()){
            try {GestionReservation gr = new GestionReservation();
                ResultSet rs = gr.getByNomCli(NomRech);
                DefaultTableModel model = (DefaultTableModel) tableReservation.getModel();
                model.setRowCount(0);
                if(!rs.next()){
                    JOptionPane.showMessageDialog(this, "Aucun passager trouvé avec ce nom!!");
                    effaceChampReserv();
                }else{
                        rs.beforeFirst();
                        int i = 0;
                        while (rs.next()) {
                            int id_reserv = rs.getInt("id_reserv");
                            String nom = rs.getString("nomcli");
                            String prenom = rs.getString("prenomcli");
                            String contact = rs.getString("contact_cli");
                            int id_traj = rs.getInt("id_traj");
                            int nb_billet = rs.getInt("nb_billet");
                            String statut_p = rs.getString("statut_paiement"); 
                            int montant = rs.getInt("montant_paye");
                            String trans_id = rs.getString("transaction_id");
                            String date = rs.getString("date_reservation");
                            i++;

                            Reservation rv = new Reservation(id_reserv, nom, prenom, contact, id_traj, nb_billet, statut_p, montant, trans_id, date);
                            Object[] row = {rv.getId_reserv(), rv.getNomcli(), rv.getPrenomcli(), rv.getContact_cli(), rv.getId_traj(), rv.getNb_billet(), rv.getStatut_paim(), rv.getMontant(), rv.getTransaction_id(), rv.getDate_reserv()};
                            model.addRow(row);
                        }
                        effaceChampReserv();
                }
                }catch (Exception ex) {
                    Logger.getLogger(PanelReservation.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Veuiller entrer le nom du passager à rechercher");
        }
    }//GEN-LAST:event_btnRechReservActionPerformed

    private void btnRetourReservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourReservActionPerformed
        // TODO add your handling code here:
        listeToutReservation();
    }//GEN-LAST:event_btnRetourReservActionPerformed

    private void btnVoirFactureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoirFactureActionPerformed
        // TODO add your handling code here:
        if(!verifReservation()){
            return;
        }
        String nom = txtNomCli.getText();
        String prenom = txtPrenom.getText();
        String contact = txtContactCli.getText();
        int id_traj = Integer.parseInt( txtIdTraj.getText());
        int nb_billet = Integer.parseInt(txtNbBillet.getText());
        String statut = txtStatPaim.getText();
        int montant = Integer.parseInt(txtMontant.getText());
        String date = txtDateReserv.getText();
        
        facturePanel.afficherInfos(nom, prenom, contact, id_traj, nb_billet, statut, montant, date);
        JFrame frame = new JFrame("Billet de voyage");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(500, 600);
        frame.setLocationRelativeTo(null);
        frame.setContentPane(facturePanel);
        frame.setVisible(true);
    }//GEN-LAST:event_btnVoirFactureActionPerformed

    private void txtNomCliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomCliKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetter(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtNomCliKeyTyped

    private void txtPrenomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrenomKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetter(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtPrenomKeyTyped

    private void txtContactCliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactCliKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
        if(txtContactCli.getText().length()>=10){
            evt.consume();
        }
    }//GEN-LAST:event_txtContactCliKeyTyped

    private void txtIdTrajKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdTrajKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtIdTrajKeyTyped

    private void txtNbBilletKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNbBilletKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtNbBilletKeyTyped

    private void txtStatPaimKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStatPaimKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetter(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtStatPaimKeyTyped

    private void txtMontantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontantKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtMontantKeyTyped

    private void txtNomRechKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomRechKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetter(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtNomRechKeyTyped

    private void txtDateReservKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateReservKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c) && c != '-'){
            evt.consume();
        }
    }//GEN-LAST:event_txtDateReservKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjoutReserv;
    private javax.swing.JButton btnEffacerReserv;
    private javax.swing.JButton btnModifReserv;
    private javax.swing.JButton btnRechReserv;
    private javax.swing.JButton btnRetourReserv;
    private javax.swing.JButton btnSuppReserv;
    private javax.swing.JButton btnVoirFacture;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableReservation;
    private javax.swing.JTextField txtContactCli;
    private javax.swing.JTextField txtDateReserv;
    private javax.swing.JTextField txtIdReserv;
    private javax.swing.JTextField txtIdTraj;
    private javax.swing.JTextField txtMontant;
    private javax.swing.JTextField txtNbBillet;
    private javax.swing.JTextField txtNomCli;
    private javax.swing.JTextField txtNomRech;
    private javax.swing.JTextField txtPrenom;
    private javax.swing.JTextField txtStatPaim;
    private javax.swing.JTextField txtTransId;
    // End of variables declaration//GEN-END:variables
}
