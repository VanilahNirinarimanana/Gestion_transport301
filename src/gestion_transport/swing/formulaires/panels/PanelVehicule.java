/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gestion_transport.swing.formulaires.panels;

import gestion_transport.swing.classes.Session;
import gestion_transport.swing.classes.Trajet;
import gestion_transport.swing.classes.Vehicule;
import gestion_transport.swing.gestions.GestionAccueil;
import gestion_transport.swing.gestions.GestionTrajet;
import gestion_transport.swing.gestions.GestionVehicule;
import java.sql.ResultSet;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vanilah
 */
public class PanelVehicule extends javax.swing.JPanel {

    /**
     * Creates new form PanelVehicule
     */
    public PanelVehicule() {
        initComponents();
        txtIdVeh.setVisible(false);
        listeVehicule();
    }

    public void effacerChampVeh(){
        txtCapacite.setText("");
        txtIdTrajet.setText("");
        txtImmat.setText("");
        txtRechImmat.setText("");
    }
    
    public void listeVehicule(){
        String titre[] = {"Id", "Id du trajet", "N° Immatriculation", "Capacité"};
        Object enreg[][] = new Object[1][1];

        try {
            GestionVehicule gv = new GestionVehicule();
            int nbr = gv.countEnregVehicule();
            enreg = new Object[nbr][titre.length];//nbr = ligne et titre.length = colonne
            ResultSet rst = gv.selectAllVehicule();
            int i = 0;
            while (rst.next()) {
                enreg[i][0] = (Object) rst.getString("id_veh");
                enreg[i][1] = (Object) rst.getString("id_traj");
                enreg[i][2] = (Object) rst.getString("immatriculation");
                enreg[i][3] = (Object) rst.getString("capacite");
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        tableVehicule.setModel(new DefaultTableModel(enreg, titre));
        jScrollPane1.setViewportView(tableVehicule);
    }
    
    public boolean verifVehicule(){
        if(txtIdTrajet.getText().trim().isEmpty() || txtImmat.getText().trim().isEmpty() || txtCapacite.getText().trim().isEmpty() ){
            JOptionPane.showMessageDialog(this, "Veuiller remplir tous les champs obligatoires", "Champs manquants", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if(!txtCapacite.getText().matches("\\d+") || Integer.parseInt(txtCapacite.getText()) <= 0 ){
            JOptionPane.showMessageDialog(this, "Capacité incorrecte", "Erreur", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIdVeh = new javax.swing.JTextField();
        txtIdTrajet = new javax.swing.JTextField();
        txtImmat = new javax.swing.JTextField();
        txtCapacite = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVehicule = new javax.swing.JTable();
        btnAjoutVeh = new javax.swing.JButton();
        btnEffacerVeh = new javax.swing.JButton();
        btnModifVeh = new javax.swing.JButton();
        btnSuppVeh = new javax.swing.JButton();
        txtRechImmat = new javax.swing.JTextField();
        btnRechVeh = new javax.swing.JButton();
        btnRetourVeh = new javax.swing.JButton();

        jLabel1.setText("Vehicule");

        txtIdVeh.setText("ID vehicule");

        txtIdTrajet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdTrajetActionPerformed(evt);
            }
        });
        txtIdTrajet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdTrajetKeyTyped(evt);
            }
        });

        txtImmat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtImmatKeyTyped(evt);
            }
        });

        txtCapacite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCapaciteKeyTyped(evt);
            }
        });

        jLabel2.setText("ID du trajet");

        jLabel3.setText("N° d'immatriculation");

        jLabel4.setText("Capacité du véhicule");

        tableVehicule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableVehicule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableVehiculeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableVehicule);

        btnAjoutVeh.setText("Ajouter");
        btnAjoutVeh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutVehActionPerformed(evt);
            }
        });

        btnEffacerVeh.setText("Effacer");
        btnEffacerVeh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEffacerVehActionPerformed(evt);
            }
        });

        btnModifVeh.setText("Modifier");
        btnModifVeh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifVehActionPerformed(evt);
            }
        });

        btnSuppVeh.setText("Supprimer");
        btnSuppVeh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuppVehActionPerformed(evt);
            }
        });

        txtRechImmat.setText("Immatriculation");
        txtRechImmat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRechImmatKeyTyped(evt);
            }
        });

        btnRechVeh.setText("Recherche");
        btnRechVeh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechVehActionPerformed(evt);
            }
        });

        btnRetourVeh.setText("Retour");
        btnRetourVeh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourVehActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtRechImmat, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRechVeh))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(47, 47, 47)
                        .addComponent(txtIdVeh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(789, 789, 789)
                        .addComponent(btnRetourVeh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdTrajet)
                                    .addComponent(txtImmat)
                                    .addComponent(txtCapacite))
                                .addGap(119, 119, 119))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnModifVeh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAjoutVeh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 149, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnEffacerVeh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSuppVeh, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(71, 71, 71)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtRechImmat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRechVeh)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdVeh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRetourVeh))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdTrajet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtImmat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCapacite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(107, 107, 107)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAjoutVeh)
                            .addComponent(btnEffacerVeh))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModifVeh)
                            .addComponent(btnSuppVeh)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAjoutVehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutVehActionPerformed
        // TODO add your handling code here:
        if(!verifVehicule()){
            return;
        }
        else{
            int id_traj = Integer.parseUnsignedInt(txtIdTrajet.getText());
            String immat = txtImmat.getText();
            int capacite = Integer.parseUnsignedInt(txtCapacite.getText());
            Vehicule veh = new Vehicule(Session.idCoop, id_traj, immat, capacite);
            try{
                GestionVehicule gv = new GestionVehicule();
                gv.insertVehicule(veh);
                listeVehicule();
                effacerChampVeh();
                JOptionPane.showMessageDialog(this, "Insertion Vehicule réussi!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }            
        }
    }//GEN-LAST:event_btnAjoutVehActionPerformed

    private void btnEffacerVehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEffacerVehActionPerformed
        // TODO add your handling code here:
        effacerChampVeh();
    }//GEN-LAST:event_btnEffacerVehActionPerformed

    private void tableVehiculeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableVehiculeMouseClicked
        // TODO add your handling code here:
        int ligne = tableVehicule.getSelectedRow();
        txtIdVeh.setText(String.valueOf(tableVehicule.getValueAt(ligne, 0)));
        txtIdTrajet.setText(String.valueOf(tableVehicule.getValueAt(ligne, 1)));
        txtImmat.setText(String.valueOf(tableVehicule.getValueAt(ligne, 2)));
        txtCapacite.setText(String.valueOf(tableVehicule.getValueAt(ligne, 3)));
    }//GEN-LAST:event_tableVehiculeMouseClicked

    private void btnModifVehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifVehActionPerformed
        // TODO add your handling code here:
        if (!verifVehicule()) {
            return;
        } else {
            try {
                int id_traj = Integer.parseUnsignedInt(txtIdTrajet.getText());
                int capacite = Integer.parseUnsignedInt(txtCapacite.getText());
                GestionVehicule gv = new GestionVehicule();
                Vehicule veh = new Vehicule(Session.idCoop, id_traj, txtImmat.getText(),capacite);
                gv.updateVehicule(txtIdVeh.getText(), veh);
                effacerChampVeh();
                listeVehicule();
                JOptionPane.showMessageDialog(this, "Mise à Jour réussi!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnModifVehActionPerformed

    private void btnSuppVehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuppVehActionPerformed
        // TODO add your handling code here:
        if (!verifVehicule()) {
            return;
        } else {
            try {
                GestionVehicule gv = new GestionVehicule();
                JOptionPane.showConfirmDialog(this, "Voulez vous vraiment supprimer ce véhicule ? ");
                gv.deleteVehicule(txtIdVeh.getText());
                effacerChampVeh();
                listeVehicule();
                JOptionPane.showMessageDialog(this, "Suppression réussie!!");
            } catch (Exception ex) {
                Logger.getLogger(PanelTrajet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSuppVehActionPerformed

    private void btnRechVehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechVehActionPerformed
        // TODO add your handling code here:
         String ImmatRech = txtRechImmat.getText().trim();
        
        if(!ImmatRech.isEmpty()){
            try {GestionVehicule gv = new GestionVehicule();
                ResultSet rs = gv.getByImmat(ImmatRech);
                DefaultTableModel model = (DefaultTableModel) tableVehicule.getModel();
                model.setRowCount(0);
                if(!rs.next()){
                    JOptionPane.showMessageDialog(this, "Aucun Véhicule trouvé avec cette immatriculation!!");
                    effacerChampVeh();
                }else{
                        rs.beforeFirst();
                        int i = 0;
                        while (rs.next()) {
                            int id_veh = rs.getInt("id_veh");
                            System.out.println(id_veh);
                            int id_traj = rs.getInt("id_traj");
                            String immat = rs.getString("immatriculation");                            
                            int capacite = rs.getInt("capacite");
                            i++;

                            Vehicule veh = new Vehicule(id_veh, immat, id_traj, capacite);
                            Object[] row = {veh.getId_veh(), veh.getId_traj(), veh.getImmat(), veh.getCapacite()};
                            model.addRow(row);
                        }
                        effacerChampVeh();
                }
                }catch (Exception ex) {
                    Logger.getLogger(PanelVehicule.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Veuiller entrer l'immatriculation du véhicule à rechercher");
        }
    }//GEN-LAST:event_btnRechVehActionPerformed

    private void btnRetourVehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourVehActionPerformed
        // TODO add your handling code here:
        listeVehicule();
    }//GEN-LAST:event_btnRetourVehActionPerformed

    private void txtIdTrajetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdTrajetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdTrajetActionPerformed

    private void txtIdTrajetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdTrajetKeyTyped
        // TODO add your handling code here
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtIdTrajetKeyTyped

    private void txtImmatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImmatKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetterOrDigit(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtImmatKeyTyped

    private void txtCapaciteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCapaciteKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtCapaciteKeyTyped

    private void txtRechImmatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRechImmatKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetterOrDigit(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtRechImmatKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjoutVeh;
    private javax.swing.JButton btnEffacerVeh;
    private javax.swing.JButton btnModifVeh;
    private javax.swing.JButton btnRechVeh;
    private javax.swing.JButton btnRetourVeh;
    private javax.swing.JButton btnSuppVeh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableVehicule;
    private javax.swing.JTextField txtCapacite;
    private javax.swing.JTextField txtIdTrajet;
    private javax.swing.JTextField txtIdVeh;
    private javax.swing.JTextField txtImmat;
    private javax.swing.JTextField txtRechImmat;
    // End of variables declaration//GEN-END:variables
}
