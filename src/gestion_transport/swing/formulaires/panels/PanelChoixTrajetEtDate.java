/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gestion_transport.swing.formulaires.panels;

import gestion_transport.swing.formulaires.FormulairePrincipale;
import gestion_transport.swing.formulaires.FormulaireReservationPassager;
import gestion_transport.swing.gestions.GestionTrajet;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.sql.ResultSet;
import java.time.Duration;
import java.util.Date;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId; 
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Vanilah
 */
public class PanelChoixTrajetEtDate extends javax.swing.JPanel {

    private FormulaireReservationPassager parent;
    //public PanelChoixTrajetEtDate panelTrajetDate;
    /**
     * Creates new form PanelChoixTrajetEtDate
     */
    public PanelChoixTrajetEtDate(FormulaireReservationPassager parent) {
        //System.out.println("PanelChoixTrajet chargé");
        initComponents();
        //setLayout(new FlowLayout());
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/imgChoixTrajet.png"));
        Image img = icon.getImage().getScaledInstance(500, 250, Image.SCALE_SMOOTH);
        lblChoixTrajet.setIcon(new ImageIcon(img));
        
        /*panelTrajetDate.setPreferredSize(new Dimension(500, 500));
        panelTrajetDate.revalidate();
        panelTrajetDate.repaint();*/
        
        this.parent = parent;
        remplirVilleArrivee();
        remplirHeureDepart();
    }
    
    public void remplirVilleArrivee(){
        try{
            GestionTrajet gt = new GestionTrajet();
            ResultSet rs = gt.selectAllForPassager();
            cbChoixTrajet.removeAllItems();
            while(rs.next()){
                cbChoixTrajet.addItem(rs.getString("ville_arr"));
            }
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }
    
    public boolean verifierDateDepart(Date dateChoisie, String heureDepartStr) {
        try {
            // Convertir la date Java Util en LocalDate
            LocalDate date = dateChoisie.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            // Convertir l’heure en LocalTime
            LocalTime heure = LocalTime.parse(heureDepartStr); // Exemple : "14:30"

            // Combinaison des deux
            LocalDateTime dateHeureDepart = LocalDateTime.of(date, heure);

            // Heure actuelle
            LocalDateTime maintenant = LocalDateTime.now();

            // Vérifie si la date/heure est dans le passé
            if (dateHeureDepart.isBefore(maintenant)) {
                JOptionPane.showMessageDialog(this, "La date ou l'heure de départ est déjà passée !");
                return false;
            }

            // Vérifie s'il reste au moins 5 heures
            Duration difference = Duration.between(maintenant, dateHeureDepart);
            if (difference.toHours() < 5) {
                JOptionPane.showMessageDialog(this, "Les réservations doivent se faire au moins 5 heures avant le départ !");
                return false;
            }

            return true;

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors de la vérification de la date.");
            return false;
        }
    }

    
     public void remplirHeureDepart(){
        try{
            GestionTrajet gt = new GestionTrajet();
            ResultSet rs = gt.selectHeureForPassager();
            cbChoixHeure.removeAllItems();
            while(rs.next()){
                cbChoixHeure.addItem(rs.getString("heure_dep"));
            }
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbChoixTrajet = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        dateChoixDate = new com.toedter.calendar.JDateChooser();
        btnSuivantTrajetDate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnRetourTrajet = new javax.swing.JButton();
        cbChoixHeure = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        lblChoixTrajet = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setText("Choisissez la destination de votre voyage parmis les trajets disponibles depuis Fianarantsoa.");

        cbChoixTrajet.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Date de votre voyage");

        btnSuivantTrajetDate.setText("Suivant");
        btnSuivantTrajetDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuivantTrajetDateActionPerformed(evt);
            }
        });

        jLabel3.setText("Destination");

        btnRetourTrajet.setText("Retour");
        btnRetourTrajet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourTrajetActionPerformed(evt);
            }
        });

        cbChoixHeure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Heure de départ");

        lblChoixTrajet.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblChoixTrajet, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(dateChoixDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbChoixTrajet, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbChoixHeure, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRetourTrajet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSuivantTrajetDate)
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChoixTrajet, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(cbChoixTrajet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dateChoixDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cbChoixHeure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRetourTrajet)
                    .addComponent(btnSuivantTrajetDate))
                .addContainerGap(139, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuivantTrajetDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuivantTrajetDateActionPerformed
        // TODO add your handling code here:
        String ville = cbChoixTrajet.getSelectedItem().toString();
        Date date = dateChoixDate.getDate();
        String heure = cbChoixHeure.getSelectedItem().toString();
        if (date == null) {
            JOptionPane.showMessageDialog(this, "Veuillez choisir une date.");
            return;
        }
        if(!verifierDateDepart(date, heure)){
            return;
        }
        LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        //java.sql.Date sqlDate = java.sql.Date.valueOf(localDate);
        try{
            GestionTrajet gt = new GestionTrajet();
            ResultSet rs = gt.getByVilleArrPassager(ville, java.sql.Date.valueOf(localDate));
            if(rs.next()){
                parent.temp.idTrajet = rs.getInt("id_traj");
                parent.temp.heureDepart = rs.getString("heure_dep");
                parent.temp.villeArrivee = ville;
                parent.temp.dateDepart = localDate;
                parent.goTo("choix_cooperative");
            }else {
            JOptionPane.showMessageDialog(this, "Aucun trajet trouvé pour cette heure, date et cette ville.");
        }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuivantTrajetDateActionPerformed

    private void btnRetourTrajetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourTrajetActionPerformed
        // TODO add your handling code here:
        new FormulairePrincipale().setVisible(true);
    }//GEN-LAST:event_btnRetourTrajetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRetourTrajet;
    private javax.swing.JButton btnSuivantTrajetDate;
    private javax.swing.JComboBox<String> cbChoixHeure;
    private javax.swing.JComboBox<String> cbChoixTrajet;
    private com.toedter.calendar.JDateChooser dateChoixDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblChoixTrajet;
    // End of variables declaration//GEN-END:variables
}
