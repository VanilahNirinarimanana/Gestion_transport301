/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gestion_transport.swing.formulaires.panels;

import gestion_transport.swing.classes.Session;
import gestion_transport.swing.classes.Trajet;
import gestion_transport.swing.gestions.GestionTrajet;
import java.awt.Component;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author Vanilah
 */
public class PanelTrajet extends javax.swing.JPanel {

    /**
     * Creates new form PanelTrajet
     */
    public PanelTrajet() {
        initComponents();
        ajusterLargeurColonnes(tableTrajet);
        listeTrajet();
        txtIdTraj.setVisible(false);
    }
    
    public void ajusterLargeurColonnes(JTable table) {
        for (int colonne = 0; colonne < table.getColumnCount(); colonne++) {
            TableColumn tableColumn = table.getColumnModel().getColumn(colonne);
            int largeurMax = 75; // largeur minimale
            for (int ligne = 0; ligne < table.getRowCount(); ligne++) {
                TableCellRenderer cellRenderer = table.getCellRenderer(ligne, colonne);
                Component c = table.prepareRenderer(cellRenderer, ligne, colonne);
                largeurMax = Math.max(c.getPreferredSize().width + 10, largeurMax);
            }
            tableColumn.setPreferredWidth(largeurMax);
        }
    }

    public void effacerChampTrajet(){
        txtVilleDep.setText("");
        txtVilleArr.setText("");
        txtHeureDep.setText("");
        txtHeureArr.setText("");
        txtDateDep.setText("");
        txtPrixBillet.setText("");
        txtRechVille.setText("");
    }
    
    public void listeTrajet() {
        String titre[] = {"Id", "Départ", "Arrivée", "Heure départ", "Heure arrivé", "Date départ", "Prix Billet"};
        Object enreg[][] = new Object[1][1];

        try {
            GestionTrajet gt = new GestionTrajet();
            int nbr = gt.countEnregTrajet();
            enreg = new Object[nbr][titre.length];//nbr = ligne et titre.length = colonne
            ResultSet rst = gt.selectAllTrajet();
            int i = 0;
            while (rst.next()) {
                enreg[i][0] = (Object) rst.getString("id_traj");
                enreg[i][1] = (Object) rst.getString("ville_dep");
                enreg[i][2] = (Object) rst.getString("ville_arr");
                enreg[i][3] = (Object) rst.getString("heure_dep");
                enreg[i][4] = (Object) rst.getString("heure_arr");
                enreg[i][5] = (Object) rst.getString("date_dep");
                enreg[i][6] = (Object) rst.getString("prix_billet");
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        tableTrajet.setModel(new DefaultTableModel(enreg, titre));
        jScrollPane1.setViewportView(tableTrajet);
    }
    
    public boolean verifierTrajet(){
        if(txtVilleDep.getText().trim().isEmpty() || txtVilleArr.getText().trim().isEmpty() || txtHeureDep.getText().equals("") || txtHeureArr.getText().equals("") || txtDateDep.getText().equals("") || txtPrixBillet.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Veuiller remplir tous les champs obligatoires", "Champs manquants", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAjoutTrajet = new javax.swing.JButton();
        txtVilleArr = new javax.swing.JTextField();
        txtHeureDep = new javax.swing.JTextField();
        txtHeureArr = new javax.swing.JTextField();
        txtDateDep = new javax.swing.JTextField();
        txtPrixBillet = new javax.swing.JTextField();
        txtIdTraj = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtVilleDep = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTrajet = new javax.swing.JTable();
        btnEffacerTraj = new javax.swing.JButton();
        btnModifTraj = new javax.swing.JButton();
        btnSuppTraj = new javax.swing.JButton();
        txtRechVille = new javax.swing.JTextField();
        btnRechTraj = new javax.swing.JButton();
        btnRetourTraj = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(776, 23));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("TRAJET");

        btnAjoutTrajet.setText("Ajouter");
        btnAjoutTrajet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutTrajetActionPerformed(evt);
            }
        });

        txtVilleArr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVilleArrKeyTyped(evt);
            }
        });

        txtHeureDep.setText("hh:mm");

        txtHeureArr.setText("hh:mm");

        txtDateDep.setText("aaaa-mm-jj");

        txtPrixBillet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrixBilletKeyTyped(evt);
            }
        });

        jLabel3.setText("Ville de départ");

        jLabel4.setText("Ville d'arrivée");

        jLabel5.setText("Heure de départ");

        jLabel6.setText("Heure d'arrivée");

        jLabel7.setText("Date de départ");

        jLabel8.setText("Prix du billet en Ariary");

        txtVilleDep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVilleDepKeyTyped(evt);
            }
        });

        tableTrajet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTrajet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTrajetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableTrajet);

        btnEffacerTraj.setText("Effacer");
        btnEffacerTraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEffacerTrajActionPerformed(evt);
            }
        });

        btnModifTraj.setText("Modifier");
        btnModifTraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifTrajActionPerformed(evt);
            }
        });

        btnSuppTraj.setText("Supprimer");
        btnSuppTraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuppTrajActionPerformed(evt);
            }
        });

        txtRechVille.setText("Ville d'arrivée");
        txtRechVille.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRechVilleKeyTyped(evt);
            }
        });

        btnRechTraj.setText("Recherche");
        btnRechTraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechTrajActionPerformed(evt);
            }
        });

        btnRetourTraj.setText("Retour");
        btnRetourTraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourTrajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIdTraj, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVilleDep, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                    .addComponent(txtVilleArr)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHeureDep)
                                    .addComponent(txtHeureArr)
                                    .addComponent(txtDateDep)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrixBillet))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAjoutTrajet, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEffacerTraj, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnModifTraj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSuppTraj)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtRechVille, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRetourTraj, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRechTraj)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(485, 485, 485)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdTraj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRechVille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRechTraj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtVilleDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRetourTraj))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVilleArr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHeureDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHeureArr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtDateDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtPrixBillet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAjoutTrajet)
                            .addComponent(btnEffacerTraj))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModifTraj)
                            .addComponent(btnSuppTraj)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAjoutTrajetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutTrajetActionPerformed
        // TODO add your handling code here:
        if(!verifierTrajet()){
            return;
        }
        else{
            String depart = txtVilleDep.getText();
            String arrive = txtVilleArr.getText();
            LocalTime heure_dep = LocalTime.parse(txtHeureDep.getText(), DateTimeFormatter.ofPattern("HH:mm"));
            LocalTime heure_arr = LocalTime.parse(txtHeureArr.getText(), DateTimeFormatter.ofPattern("HH:mm"));
            String date_dep = txtDateDep.getText();
            int prix = Integer.parseUnsignedInt(txtPrixBillet.getText());
            Trajet tj = new Trajet(Session.idCoop, depart, arrive, heure_dep, heure_arr, date_dep, prix);
            try{
                GestionTrajet gt = new GestionTrajet();
                gt.insertTrajet(tj);
                listeTrajet();
                effacerChampTrajet();
                JOptionPane.showMessageDialog(this, "Insertion Trajet réussi!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }            
        }
    }//GEN-LAST:event_btnAjoutTrajetActionPerformed

    private void btnEffacerTrajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEffacerTrajActionPerformed
        // TODO add your handling code here:
        effacerChampTrajet();
    }//GEN-LAST:event_btnEffacerTrajActionPerformed

    private void btnModifTrajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifTrajActionPerformed
        // TODO add your handling code here:
        if (!verifierTrajet()) {
            return;
        } else {
            try {
                LocalTime heure_dep = LocalTime.parse(txtHeureDep.getText(), DateTimeFormatter.ofPattern("HH:mm"));
                LocalTime heure_arr = LocalTime.parse(txtHeureArr.getText(), DateTimeFormatter.ofPattern("HH:mm"));
                int prix = Integer.parseUnsignedInt(txtPrixBillet.getText());
                GestionTrajet gt = new GestionTrajet();
                Trajet tj = new Trajet(Session.idCoop, txtVilleDep.getText(), txtVilleArr.getText(), heure_dep, heure_arr, txtDateDep.getText(), prix);
                gt.updateTrajet(Integer.parseUnsignedInt(txtIdTraj.getText()), tj);
                effacerChampTrajet();
                listeTrajet();
                JOptionPane.showMessageDialog(this, "Mise à Jour réussi!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnModifTrajActionPerformed

    private void tableTrajetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTrajetMouseClicked
        // TODO add your handling code here:
        int ligne = tableTrajet.getSelectedRow();
        txtIdTraj.setText(String.valueOf(tableTrajet.getValueAt(ligne, 0)));
        txtVilleDep.setText(String.valueOf(tableTrajet.getValueAt(ligne, 1)));
        txtVilleArr.setText(String.valueOf(tableTrajet.getValueAt(ligne, 2)));
        txtHeureDep.setText(String.valueOf(tableTrajet.getValueAt(ligne, 3)));
        txtHeureArr.setText(String.valueOf(tableTrajet.getValueAt(ligne, 4)));
        txtDateDep.setText(String.valueOf(tableTrajet.getValueAt(ligne, 5)));
        txtPrixBillet.setText(String.valueOf(tableTrajet.getValueAt(ligne, 6)));
    }//GEN-LAST:event_tableTrajetMouseClicked

    private void btnSuppTrajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuppTrajActionPerformed
        // TODO add your handling code here:
        if (!verifierTrajet()) {
            return;
        } else {
            try {
                GestionTrajet gt = new GestionTrajet();
                JOptionPane.showConfirmDialog(this, "Voulez vous vraiment supprimer ce trajet ? ");
                gt.deleteTrajet(Integer.parseUnsignedInt(txtIdTraj.getText()));
                effacerChampTrajet();
                listeTrajet();
                JOptionPane.showMessageDialog(this, "Suppression réussie!!");
            } catch (Exception ex) {
                Logger.getLogger(PanelTrajet.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSuppTrajActionPerformed

    private void btnRechTrajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechTrajActionPerformed
        // TODO add your handling code here
        String VilleRech = txtRechVille.getText().trim();
        
        if(!VilleRech.isEmpty()){
            try {GestionTrajet gt = new GestionTrajet();
                ResultSet rs = gt.getByVilleArr(VilleRech);
                DefaultTableModel model = (DefaultTableModel) tableTrajet.getModel();
                model.setRowCount(0);
                if(!rs.next()){
                    JOptionPane.showMessageDialog(this, "Aucun Trajet trouvé pour cette ville!!");
                    effacerChampTrajet();
                }else{
                        rs.beforeFirst();
                        int i = 0;
                        while (rs.next()) {
                            int id_traj = rs.getInt("id_traj");
                            System.out.println(id_traj);
                            String ville_arr = rs.getString("ville_arr");
                            String ville_dep = rs.getString("ville_dep");                            
                            LocalTime heure_dep= rs.getTime("heure_dep").toLocalTime();
                            LocalTime heure_arr= rs.getTime("heure_arr").toLocalTime();
                            String date = rs.getString("date_dep");
                            int prix = rs.getInt("prix_billet");
                            i++;

                            Trajet trajet = new Trajet(ville_dep, id_traj, ville_arr, heure_dep, heure_arr, date, prix);
                            Object[] row = {trajet.getId_traj(), trajet.getVille_dep(), trajet.getVille_arr(), trajet.getHeure_dep(), trajet.getHeure_arr(), trajet.getDate_dep(), trajet.getPrix_billet()};
                            model.addRow(row);
                        }
                        effacerChampTrajet();
                }
                }catch (Exception ex) {
                    Logger.getLogger(PanelTrajet.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Veuiller entrer une ville d'arrivée à rechercher");
        }
    }//GEN-LAST:event_btnRechTrajActionPerformed

    private void btnRetourTrajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourTrajActionPerformed
        // TODO add your handling code here:
        listeTrajet();
    }//GEN-LAST:event_btnRetourTrajActionPerformed

    private void txtVilleDepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVilleDepKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetterOrDigit(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtVilleDepKeyTyped

    private void txtVilleArrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVilleArrKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetterOrDigit(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtVilleArrKeyTyped

    private void txtPrixBilletKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrixBilletKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtPrixBilletKeyTyped

    private void txtRechVilleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRechVilleKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isLetterOrDigit(c) && c != ' '){
            evt.consume();
        }
    }//GEN-LAST:event_txtRechVilleKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjoutTrajet;
    private javax.swing.JButton btnEffacerTraj;
    private javax.swing.JButton btnModifTraj;
    private javax.swing.JButton btnRechTraj;
    private javax.swing.JButton btnRetourTraj;
    private javax.swing.JButton btnSuppTraj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableTrajet;
    private javax.swing.JTextField txtDateDep;
    private javax.swing.JTextField txtHeureArr;
    private javax.swing.JTextField txtHeureDep;
    private javax.swing.JTextField txtIdTraj;
    private javax.swing.JTextField txtPrixBillet;
    private javax.swing.JTextField txtRechVille;
    private javax.swing.JTextField txtVilleArr;
    private javax.swing.JTextField txtVilleDep;
    // End of variables declaration//GEN-END:variables
}
