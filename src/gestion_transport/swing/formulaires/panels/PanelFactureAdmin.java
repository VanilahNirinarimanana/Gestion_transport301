/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gestion_transport.swing.formulaires.panels;

import gestion_transport.swing.classes.Session;
import javax.swing.JOptionPane;
import java.awt.print.PrinterJob;
import java.awt.print.Printable;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Font;
import java.awt.print.PrinterAbortException;


/**
 *
 * @author Vanilah
 */
public class PanelFactureAdmin extends javax.swing.JPanel {

    /**
     * Creates new form PanelFactureAdmin
     */
    public PanelFactureAdmin() {
        initComponents();
    }
    
    public void afficherInfos(String nom, String prenom, String contact, int id_traj, int nb_billet, String statut_pai, int Montant, String date) {
        
        String resume = """
                        COOPERATIVE : %s 
                        
                CLIENT : %s %s
                CONTACT : %s
                TRAJET : ville de depart - destination (a modifier)
                DATE : date de depart
                HEURE DE DEPART: heure de depart
                STATUT DU PAIEMENT : %s        
                NOMBRE DE BILLETS : %d
                MONTANT PAYÉ : %d Ar
                DATE DE RESERVATION : %s
                TRANSACTION ID : Paiement en liquide
                SIÈGES : Numero du siege choisie par le passager
                """.formatted(
                Session.nomCoop, nom, prenom, contact, statut_pai, nb_billet, Montant,date
                //String.join(", ", temp.placesChoisies.stream().map(String::valueOf).toList())
        );
        txtFactureAdmin.setText(resume);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtFactureAdmin = new javax.swing.JTextArea();
        btnGenererFacture = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        txtFactureAdmin.setColumns(20);
        txtFactureAdmin.setRows(5);
        jScrollPane1.setViewportView(txtFactureAdmin);

        btnGenererFacture.setText("Generer Facture");
        btnGenererFacture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenererFactureActionPerformed(evt);
            }
        });

        jLabel1.setText("Previsualisation de la facture");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGenererFacture)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(84, 84, 84)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(164, 164, 164)
                            .addComponent(jLabel1))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGenererFacture)
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenererFactureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenererFactureActionPerformed
        // TODO add your handling code here
        try {
            // Préparation du travail d'impression
            PrinterJob job = PrinterJob.getPrinterJob();
            job.setJobName("Facture Réservation");

            // Définir ce qui doit être imprimé
            job.setPrintable(new Printable() {
                public int print(Graphics g, PageFormat pf, int pageIndex) throws PrinterException {
                    if (pageIndex > 0) {
                        return Printable.NO_SUCH_PAGE;
                    }

                    Graphics2D g2d = (Graphics2D) g;
                    g2d.translate(pf.getImageableX(), pf.getImageableY());

                    // Titre de la facture
                    g.setFont(new Font("Helvetica", Font.BOLD, 16));
                    g.drawString("FACTURE DE RÉSERVATION", 100, 100);

                    // Corps de la facture
                    g.setFont(new Font("Helvetica", Font.PLAIN, 12));
                    String[] lines = txtFactureAdmin.getText().split("\n");
                    int y = 130;
                    for (String line : lines) {
                        g.drawString(line, 100, y);
                        y += 15;
                    }

                    return Printable.PAGE_EXISTS;
                }
            });

            // Affiche la boîte d’aperçu/choix imprimante
            boolean userAccepted = job.printDialog();
            if (userAccepted) {
                try{
                    job.print();
                    JOptionPane.showMessageDialog(this, "Impression lancée avec succès !");
                }
                catch(PrinterAbortException pae){
                    System.out.println("Impression annulé (aucune imprimante disponible ?)");
                }/*catch(PrinterException ex){
                    ex.printStackTrace();
                }*/                
            } else {
                JOptionPane.showMessageDialog(this, "Impression annulée.");
            }

        } catch (PrinterException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur d'impression : " + e.getMessage());
        }
    }//GEN-LAST:event_btnGenererFactureActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenererFacture;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtFactureAdmin;
    // End of variables declaration//GEN-END:variables
}
